name: conventional-release
description: Generates a new version and tag based on conventional commits

branding:
  icon: tag
  color: blue

inputs:
  token:
    description: Token used to push git tag
    default: ${{ github.token }}
  auto-release:
    description: If 'true', creates a release automatically whenever a release-worthy commit is pushed (indicated by commit message) to the release branch.
    default: true
  release-branch:
    description: Name of the branch releases should be created from when auto-release enabled
    default: main
  update-major-tag:
    description: If 'true', force-pushes a git tag for the major version
    default: false
  ignore-commits-before:
    description: The commit SHA to start the commit message validation from
  commit-files:
    description: Create a new commit including the specified files and tag it
  github-release-enabled:
    description: Create GitHub Release
    default: true
  github-release-draft:
    description: Create the GitHub Release as draft
    default: false
  github-release-latest:
    description: Mark GitHub Release as latest
    default: true
  github-release-files:
    description: Attach workspace files to the GitHub Release
  ref:
    description: Git ref
    default: ${{ github.ref }}
  enabled:
    description: internal property, workaround to get job status, don't specify explicitly
    default: ${{ job.status == 'success' }}

outputs:
  version:
    description: Next version
  publish:
    description: Is 'true' when release build, otherwise empty (truthy false)

runs:
  using: docker
  image: Dockerfile
  entrypoint: prepare-release
  post-entrypoint: complete-release
  env:
    IGNORE_COMMITS_BEFORE: ${{ inputs.ignore-commits-before }}
    RELEASE_BRANCH: ${{ inputs.release-branch }}
    GIT_TOKEN: ${{ inputs.token }}
    GIT_REF: ${{ inputs.ref }}
    ENABLED: ${{ inputs.enabled }}
    COMMIT_FILES: ${{ inputs.commit-files }}
    GITHUB_RELEASE_ENABLED: ${{ inputs.github-release-enabled }}
    GITHUB_RELEASE_DRAFT: ${{ inputs.github-release-draft }}
    GITHUB_RELEASE_LATEST: ${{ inputs.github-release-latest }}
    GITHUB_RELEASE_FILES: ${{ inputs.github-release-files }}
    UPDATE_MAJOR_TAG: ${{ inputs.update-major-tag }}
    AUTO_RELEASE: ${{ inputs.auto-release }}
